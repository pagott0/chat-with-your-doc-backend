// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(cuid())
  name             String?
  email            String             @unique
  password         String
  createdAt        DateTime           @default(now())
  UploadedDocument UploadedDocument[]
  Message          Message[]
}

model UploadedDocument {
  id            Int       @id @default(autoincrement())
  userId        String // ID do usuário associado ao documento
  file          Bytes // Armazenamento do arquivo como BLOB
  fileName      String
  fileType      String
  fileSize      Int
  extractedText String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id]) // Relacionamento com a tabela de usuários
  messages      Message[]
}

model Message {
  id         String           @id @default(uuid())
  documentId Int
  document   UploadedDocument @relation(fields: [documentId], references: [id])
  userId     String
  user       User             @relation(fields: [userId], references: [id])
  role       String // 'user' | 'assistant'
  content    String
  createdAt  DateTime         @default(now())
}
